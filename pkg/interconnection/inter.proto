syntax = "proto3";

option go_package = ".;interconnection";

// Represents another node
service Node {
    rpc CreateKeygroup (CreateKeygroupRequest) returns (StatusResponse);
    rpc DeleteKeygroup (DeleteKeygroupRequest) returns (StatusResponse);
    rpc PutItem (PutItemRequest) returns (StatusResponse);
    rpc GetItem (GetItemRequest) returns (GetItemResponse);
    rpc GetAllItems (GetAllItemsRequest) returns (GetAllItemsResponse);
    rpc DeleteItem (DeleteItemRequest) returns (StatusResponse);
    rpc AddReplica (AddReplicaRequest) returns (StatusResponse);
    rpc RemoveReplica (RemoveReplicaRequest) returns (StatusResponse);
}

enum EnumStatus {
    OK = 0;
    ERROR = 1;
}

message StatusResponse {
    EnumStatus status = 1;
    // This is an optional message, only to be sent if the status is not OK
    string errorMessage = 2;
}

message CreateKeygroupRequest {
    string keygroup = 1;
    int64 expiry = 2;
}

message DeleteKeygroupRequest {
    string keygroup = 1;
}

message PutItemRequest {
    string keygroup = 1;
    string id = 2;
    string data = 3;
}

message GetItemRequest {
    string keygroup = 1;
    string id = 2;
}

message GetItemResponse {
    string data = 1;
}

message GetAllItemsRequest {
    string keygroup = 1;
}

message GetAllItemsResponse {
    repeated Data data = 1;
}

message Data {
    string id = 1;
    string data = 2;
}

message UpdateItemRequest {
    string keygroup = 1;
    string id = 2;
    string data = 3;
}

message DeleteItemRequest {
    string keygroup = 1;
    string id = 2;
}

message AddReplicaRequest {
    string nodeId = 1;
    string keygroup = 2;
    int64 expiry = 3;
}

message RemoveReplicaRequest {
    string nodeId = 1;
    string keygroup = 2;
}
