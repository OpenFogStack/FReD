version: "3.7"

services:
  nodeC:
    build: ..
    depends_on:
      - etcd
      - storeC
    image: fred/fred:local
    container_name: nodeC
    command: "--remote-storage-host 172.26.3.2:1337 \
    --peer-host 172.26.3.1:5555 \
    --nodeID nodeC \
    --host 172.26.3.1:9001 \
    --cert /cert/nodeC.crt \
    --key /cert/nodeC.key \
    --ca-file /cert/ca.crt \
    --peer-cert /cert/nodeC.crt \
    --peer-key /cert/nodeC.key \
    --peer-ca /cert/ca.crt \
    --adaptor remote \
    --nase-host https://172.26.6.1:2379 \
    --nase-cert /cert/nodeC.crt \
    --nase-key /cert/nodeC.key \
    --nase-ca /cert/ca.crt \
    --nase-cached \
    --handler dev \
    --badgerdb-path ./db  \
    --remote-storage-cert /cert/nodeC.crt \
    --remote-storage-key /cert/nodeC.key  \
    --remote-storage-ca /cert/ca.crt  \
    --trigger-cert /cert/nodeC.crt \
    --trigger-key /cert/nodeC.key \
    --trigger-ca /cert/ca.crt"
    environment:
      - LOG_LEVEL
    volumes:
      - ./certificates/nodeC.crt:/cert/nodeC.crt
      - ./certificates/nodeC.key:/cert/nodeC.key
      - ./certificates/ca.crt:/cert/ca.crt
    ports:
      - 9004:9001
    networks:
      fredwork:
        ipv4_address: 172.26.3.1

  storeC:
    build:
      context: ..
      dockerfile: storage.Dockerfile
    image: fred/store:local
    container_name: storeC
    command: "--log-level '${LOG_LEVEL_STORE}' \
    --cert /cert/cert.crt \
    --key /cert/key.key \
    --ca-file /cert/ca.crt"
    volumes:
      - ./certificates/storeC.crt:/cert/cert.crt
      - ./certificates/storeC.key:/cert/key.key
      - ./certificates/ca.crt:/cert/ca.crt
    networks:
      fredwork:
        ipv4_address: 172.26.3.2

networks:
  fredwork:
    external: true
