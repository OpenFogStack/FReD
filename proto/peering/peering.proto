syntax = "proto3";

package mcc.fred.peering;
option go_package = ".;peering";

// Represents another node
service Node {
    rpc CreateKeygroup (CreateKeygroupRequest) returns (Empty);
    rpc DeleteKeygroup (DeleteKeygroupRequest) returns (Empty);
    rpc PutItem (PutItemRequest) returns (Empty);
    rpc AppendItem (AppendItemRequest) returns (Empty);
    rpc GetItem (GetItemRequest) returns (GetItemResponse);
    rpc GetAllItems (GetAllItemsRequest) returns (GetAllItemsResponse);
    rpc DeleteItem (DeleteItemRequest) returns (Empty);
    rpc AddReplica (AddReplicaRequest) returns (Empty);
    rpc RemoveReplica (RemoveReplicaRequest) returns (Empty);
}

message Empty{}

message CreateKeygroupRequest {
    string keygroup = 1;
    int64 expiry = 2;
}

message DeleteKeygroupRequest {
    string keygroup = 1;
}

message PutItemRequest {
    string keygroup = 1;
    string id = 2;
    string data = 3;
}

message GetItemRequest {
    string keygroup = 1;
    string id = 2;
}

message GetItemResponse {
    string data = 1;
}

message GetAllItemsRequest {
    string keygroup = 1;
}

message GetAllItemsResponse {
    repeated Data data = 1;
}

message Data {
    string id = 1;
    string data = 2;
}

message UpdateItemRequest {
    string keygroup = 1;
    string id = 2;
    string data = 3;
}

message AppendItemRequest {
    string keygroup = 1;
    string id = 2;
    string data = 3;
}

message DeleteItemRequest {
    string keygroup = 1;
    string id = 2;
}

message AddReplicaRequest {
    string nodeId = 1;
    string keygroup = 2;
    int64 expiry = 3;
}

message RemoveReplicaRequest {
    string nodeId = 1;
    string keygroup = 2;
}
