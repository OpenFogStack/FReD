syntax = "proto3";

package mcc.fred.storage;
option go_package = ".;storage";

service Database {
	  rpc Update (UpdateItem) returns (Response) {}
    rpc Delete (Key) returns (Response) {}
    rpc Append (AppendItem) returns (Key) {}
    rpc Read (Key) returns (Val) {}
    rpc Scan (ScanRequest) returns (stream Item) {}
    rpc ReadAll (Keygroup) returns (stream Item) {}
    rpc IDs (Keygroup) returns (stream Key) {}
    rpc Exists (Key) returns (Response) {}
    rpc CreateKeygroup (Keygroup) returns (Response) {}
    rpc DeleteKeygroup (Keygroup) returns (Response) {}
    rpc ExistsKeygroup (Keygroup) returns (Response) {}
    rpc AddKeygroupTrigger (KeygroupTrigger) returns (Response) {}
    rpc DeleteKeygroupTrigger (KeygroupTrigger) returns (Response) {}
    rpc GetKeygroupTrigger (Keygroup) returns (stream Trigger) {}
}

message Item {
    string keygroup = 1;
    string id = 2;
    string val = 3;
}

message ScanRequest {
    Key key = 1;
    uint64 count = 2;
}

message UpdateItem {
    string keygroup = 1;
    string id = 2;
    string val = 3;
    bool append = 4;
    int64 expiry = 5;
}

message AppendItem {
    string keygroup = 1;
    string val = 2;
    int64 expiry = 3;
}

message Trigger {
    string id = 1;
    string host = 2;
}

// A Key uniquely identifies data. In our case it contains a keygroup and the id
message Key {
    string keygroup = 1;
    string id = 2;
}

message Val {
    string val = 1;
}

message Keygroup {
    string keygroup = 1;
}

message KeygroupTrigger {
    string keygroup = 1;
    Trigger trigger = 2;
}

message Response {
    bool success = 1;
    string message = 2;
}