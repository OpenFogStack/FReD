// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: trigger.proto

package trigger

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnumTriggerStatus int32

const (
	EnumTriggerStatus_TRIGGER_OK    EnumTriggerStatus = 0
	EnumTriggerStatus_TRIGGER_ERROR EnumTriggerStatus = 1
)

// Enum value maps for EnumTriggerStatus.
var (
	EnumTriggerStatus_name = map[int32]string{
		0: "TRIGGER_OK",
		1: "TRIGGER_ERROR",
	}
	EnumTriggerStatus_value = map[string]int32{
		"TRIGGER_OK":    0,
		"TRIGGER_ERROR": 1,
	}
)

func (x EnumTriggerStatus) Enum() *EnumTriggerStatus {
	p := new(EnumTriggerStatus)
	*p = x
	return p
}

func (x EnumTriggerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumTriggerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trigger_proto_enumTypes[0].Descriptor()
}

func (EnumTriggerStatus) Type() protoreflect.EnumType {
	return &file_trigger_proto_enumTypes[0]
}

func (x EnumTriggerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumTriggerStatus.Descriptor instead.
func (EnumTriggerStatus) EnumDescriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{0}
}

type TriggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status EnumTriggerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=mcc.fred.trigger.EnumTriggerStatus" json:"status,omitempty"`
	// This is an optional message, only to be sent if the status is not OK
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *TriggerResponse) Reset() {
	*x = TriggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResponse) ProtoMessage() {}

func (x *TriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResponse.ProtoReflect.Descriptor instead.
func (*TriggerResponse) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{0}
}

func (x *TriggerResponse) GetStatus() EnumTriggerStatus {
	if x != nil {
		return x.Status
	}
	return EnumTriggerStatus_TRIGGER_OK
}

func (x *TriggerResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type PutItemTriggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keygroup string `protobuf:"bytes,1,opt,name=keygroup,proto3" json:"keygroup,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Val      string `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *PutItemTriggerRequest) Reset() {
	*x = PutItemTriggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutItemTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutItemTriggerRequest) ProtoMessage() {}

func (x *PutItemTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutItemTriggerRequest.ProtoReflect.Descriptor instead.
func (*PutItemTriggerRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{1}
}

func (x *PutItemTriggerRequest) GetKeygroup() string {
	if x != nil {
		return x.Keygroup
	}
	return ""
}

func (x *PutItemTriggerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutItemTriggerRequest) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type DeleteItemTriggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keygroup string `protobuf:"bytes,1,opt,name=keygroup,proto3" json:"keygroup,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteItemTriggerRequest) Reset() {
	*x = DeleteItemTriggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemTriggerRequest) ProtoMessage() {}

func (x *DeleteItemTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemTriggerRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemTriggerRequest) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteItemTriggerRequest) GetKeygroup() string {
	if x != nil {
		return x.Keygroup
	}
	return ""
}

func (x *DeleteItemTriggerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_trigger_proto protoreflect.FileDescriptor

var file_trigger_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x6d, 0x63, 0x63, 0x2e, 0x66, 0x72, 0x65, 0x64, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x22, 0x72, 0x0a, 0x0f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x63, 0x63, 0x2e, 0x66, 0x72, 0x65, 0x64, 0x2e,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x2a, 0x36, 0x0a, 0x11, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x32, 0xcf, 0x01, 0x0a,
	0x0b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x5c, 0x0a, 0x0e,
	0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x27,
	0x2e, 0x6d, 0x63, 0x63, 0x2e, 0x66, 0x72, 0x65, 0x64, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x63, 0x63, 0x2e, 0x66, 0x72,
	0x65, 0x64, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x2a, 0x2e, 0x6d, 0x63, 0x63, 0x2e, 0x66, 0x72, 0x65, 0x64, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x63,
	0x63, 0x2e, 0x66, 0x72, 0x65, 0x64, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b,
	0x5a, 0x09, 0x2e, 0x3b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_trigger_proto_rawDescOnce sync.Once
	file_trigger_proto_rawDescData = file_trigger_proto_rawDesc
)

func file_trigger_proto_rawDescGZIP() []byte {
	file_trigger_proto_rawDescOnce.Do(func() {
		file_trigger_proto_rawDescData = protoimpl.X.CompressGZIP(file_trigger_proto_rawDescData)
	})
	return file_trigger_proto_rawDescData
}

var file_trigger_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trigger_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_trigger_proto_goTypes = []interface{}{
	(EnumTriggerStatus)(0),           // 0: mcc.fred.trigger.EnumTriggerStatus
	(*TriggerResponse)(nil),          // 1: mcc.fred.trigger.TriggerResponse
	(*PutItemTriggerRequest)(nil),    // 2: mcc.fred.trigger.PutItemTriggerRequest
	(*DeleteItemTriggerRequest)(nil), // 3: mcc.fred.trigger.DeleteItemTriggerRequest
}
var file_trigger_proto_depIdxs = []int32{
	0, // 0: mcc.fred.trigger.TriggerResponse.status:type_name -> mcc.fred.trigger.EnumTriggerStatus
	2, // 1: mcc.fred.trigger.TriggerNode.PutItemTrigger:input_type -> mcc.fred.trigger.PutItemTriggerRequest
	3, // 2: mcc.fred.trigger.TriggerNode.DeleteItemTrigger:input_type -> mcc.fred.trigger.DeleteItemTriggerRequest
	1, // 3: mcc.fred.trigger.TriggerNode.PutItemTrigger:output_type -> mcc.fred.trigger.TriggerResponse
	1, // 4: mcc.fred.trigger.TriggerNode.DeleteItemTrigger:output_type -> mcc.fred.trigger.TriggerResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_trigger_proto_init() }
func file_trigger_proto_init() {
	if File_trigger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trigger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutItemTriggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemTriggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trigger_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trigger_proto_goTypes,
		DependencyIndexes: file_trigger_proto_depIdxs,
		EnumInfos:         file_trigger_proto_enumTypes,
		MessageInfos:      file_trigger_proto_msgTypes,
	}.Build()
	File_trigger_proto = out.File
	file_trigger_proto_rawDesc = nil
	file_trigger_proto_goTypes = nil
	file_trigger_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TriggerNodeClient is the client API for TriggerNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TriggerNodeClient interface {
	PutItemTrigger(ctx context.Context, in *PutItemTriggerRequest, opts ...grpc.CallOption) (*TriggerResponse, error)
	DeleteItemTrigger(ctx context.Context, in *DeleteItemTriggerRequest, opts ...grpc.CallOption) (*TriggerResponse, error)
}

type triggerNodeClient struct {
	cc grpc.ClientConnInterface
}

func NewTriggerNodeClient(cc grpc.ClientConnInterface) TriggerNodeClient {
	return &triggerNodeClient{cc}
}

func (c *triggerNodeClient) PutItemTrigger(ctx context.Context, in *PutItemTriggerRequest, opts ...grpc.CallOption) (*TriggerResponse, error) {
	out := new(TriggerResponse)
	err := c.cc.Invoke(ctx, "/mcc.fred.trigger.TriggerNode/PutItemTrigger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *triggerNodeClient) DeleteItemTrigger(ctx context.Context, in *DeleteItemTriggerRequest, opts ...grpc.CallOption) (*TriggerResponse, error) {
	out := new(TriggerResponse)
	err := c.cc.Invoke(ctx, "/mcc.fred.trigger.TriggerNode/DeleteItemTrigger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TriggerNodeServer is the server API for TriggerNode service.
type TriggerNodeServer interface {
	PutItemTrigger(context.Context, *PutItemTriggerRequest) (*TriggerResponse, error)
	DeleteItemTrigger(context.Context, *DeleteItemTriggerRequest) (*TriggerResponse, error)
}

// UnimplementedTriggerNodeServer can be embedded to have forward compatible implementations.
type UnimplementedTriggerNodeServer struct {
}

func (*UnimplementedTriggerNodeServer) PutItemTrigger(context.Context, *PutItemTriggerRequest) (*TriggerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutItemTrigger not implemented")
}
func (*UnimplementedTriggerNodeServer) DeleteItemTrigger(context.Context, *DeleteItemTriggerRequest) (*TriggerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItemTrigger not implemented")
}

func RegisterTriggerNodeServer(s *grpc.Server, srv TriggerNodeServer) {
	s.RegisterService(&_TriggerNode_serviceDesc, srv)
}

func _TriggerNode_PutItemTrigger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutItemTriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerNodeServer).PutItemTrigger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcc.fred.trigger.TriggerNode/PutItemTrigger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerNodeServer).PutItemTrigger(ctx, req.(*PutItemTriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TriggerNode_DeleteItemTrigger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteItemTriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerNodeServer).DeleteItemTrigger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcc.fred.trigger.TriggerNode/DeleteItemTrigger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerNodeServer).DeleteItemTrigger(ctx, req.(*DeleteItemTriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TriggerNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mcc.fred.trigger.TriggerNode",
	HandlerType: (*TriggerNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutItemTrigger",
			Handler:    _TriggerNode_PutItemTrigger_Handler,
		},
		{
			MethodName: "DeleteItemTrigger",
			Handler:    _TriggerNode_DeleteItemTrigger_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trigger.proto",
}
